##导入宏定义
$!define

##设置表后缀（宏定义）
#setTableSuffix("Controller")

##保存文件（宏定义）
#save("/controller", "Controller.java")

##包路径（宏定义）
#setPackageSuffix("controller")

##定义服务名
#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "Service"))

##定义实体对象名
#set($entityName = $!tool.firstLowerCase($!tableInfo.name))

import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.*;
import cn.gmlee.tools.base.mod.JsonResult;
import $!{tableInfo.savePackageName}.dao.entity.$!tableInfo.name;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import cn.gmlee.tools.base.mod.PageRequest;
import cn.gmlee.tools.logback.anno.ApiPrint;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;

import javax.annotation.Resource;
import javax.validation.constraints.NotNull;
import java.util.List;

##表注释（宏定义）
#tableComment("表控制层")
@RestController
@RequestMapping("$!tool.firstLowerCase($!tableInfo.name)")
public class $!{tableName} extends ApiController {

    @Resource
    private $!{tableInfo.name}Service $!{serviceName};

    @ApiOperation(value = "批量保存")
    @ApiPrint(value = "批量保存")
    @PostMapping(value = "saveBatch")
        @ApiImplicitParams({
    @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
    })
        public JsonResult saveBatch(
        @RequestBody @NotNull(message = "数据是空") @Validated List<$!tableInfo.name> vos
    ) {
        $!{serviceName}.saveBatch(vos);
        return JsonResult.OK;
    }

    @ApiOperation(value = "保存")
    @ApiPrint(value = "保存")
    @PostMapping(value = "save")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
    })
        public JsonResult save(
        @RequestBody @Validated $!tableInfo.name vo
    ) {
        $!{serviceName}.save(vo);
        return JsonResult.OK;
    }

    @ApiOperation(value = "新增/修改", notes = "有`主键`则修改反之新增")
    @ApiPrint(value = "新增/修改")
    @PostMapping(value = "modify")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
    })
    public JsonResult modify(
        @RequestBody @Validated $!tableInfo.name vo
    ) {
    $!{serviceName}.modify(vo);
        return JsonResult.OK;
    }

    @ApiOperation(value = "逻辑删除")
    @ApiPrint(value = "逻辑删除")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
        @ApiImplicitParam(name = "id", value = "编号", dataType = "long", dataTypeClass = Long.class),
    })
    @PostMapping(value = "logicDelById")
    public JsonResult logicDelById(
        @RequestBody @NotNull(message = "编号是空") Long id
    ) {
        $!{serviceName}.logicDelById(id);
        return JsonResult.OK;
    }

    @ApiOperation(value = "获取单条")
    @ApiPrint(value = "获取单条")
    @GetMapping(value = "getById")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
        @ApiImplicitParam(name = "id", value = "编号", paramType = "query", dataType = "long", dataTypeClass = Long.class),
    })
    public JsonResult getById(
        @NotNull(message = "编号是空") Long id
    ) {
        return JsonResult.OK.newly($!{serviceName}.getById(id));
    }

    @ApiOperation(value = "获取列表")
    @ApiPrint(value = "获取列表")
    @PostMapping(value = "listBy")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
    })
    public JsonResult listBy(
        @RequestBody $!tableInfo.name vo
    ) {
        return JsonResult.OK.newly($!{serviceName}.listBy(vo));
    }

    @ApiOperation(value = "分页查询")
    @ApiPrint(value = "分页查询")
    @PostMapping(value = "listPageBy")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "current", value = "起始页", paramType = "query", dataType = "integer", dataTypeClass = Integer.class),
        @ApiImplicitParam(name = "size", value = "页数量", paramType = "query", dataType = "integer", dataTypeClass = Integer.class),
        @ApiImplicitParam(name = "token", value = "身份令牌", paramType = "header", dataType = "string", dataTypeClass = String.class),
    })
    public JsonResult listPageBy(
        PageRequest page, @RequestBody $!tableInfo.name vo
    ) {
        return JsonResult.OK.newly($!{serviceName}.listPageBy(new Page(page.current, page.size), vo));
    }
}